@page "/Productos"
@page "/Productos/{ProductoId: int}"

@using Jordy_P1_APL2.Models;
@using Jordy_P1_APL2.BLL;
@inject IToastService toast

<EditForm Model="productos" OnValidSubmit="Guardar">
    <DataAnnotationsValidator />
    <div class="card">

        <div class="card-header">
            <h1>Registro de Productos</h1>
        </div>

        @*ProductoId y Boton al Lado *@
        <div class="card-body">
            <from />
            <div class="form-row align-items-center">
                <div class="col">
                    <div class="form-group">
                        <lavel>PersonaId</lavel>
                        <div class="input-group">
                            <InputNumber @bind-Value="productos.ProductoId" class="form-control col-4" />
                            <div class="input-group-append">
                                <button type="button" class="btn btn-primary input-group-text" @onclick="Buscar"> <i class="oi oi-magnifying-glass" /> Buscar</button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        @*Descripcion*@
        <div class="form-group">
            <label>Descripcion</label>
            <InputText @bind-Value="productos.Descripcion" class="form-control" />
            <ValidationMessage For="@(() => productos.Descripcion)" />
        </div>

        @*Existencia*@
        <div class="form-group">
            <label>Existencia</label>
            <InputNumber @bind-Value="productos.Existencia" class="form-control" />
            <ValidationMessage For="@(() => productos.Existencia)" />
        </div>

        @*Costo*@
        <div class="form-group">
            <label>Costo</label>
            <InputNumber @bind-Value="productos.Costo" class="form-control" />
            <ValidationMessage For="@(() => productos.Costo)" />
        </div>

        @*Valor del Inventario*@
        <div class="form-group">
            <label>Valor del Inventario</label>
            <InputNumber @bind-Value="productos.ValorInventario" class="form-control" />
            <ValidationMessage For="@(() => productos.ValorInventario)" />
        </div>

    </div>

    @*Botones*@
<div class="card-footer">
    <div class="form-group text-center" display: inline-block>
        @*Boton Nuevo*@
        <button type="button" class="btn btn-lg btn-primary" @onclick="Nuevo"> <i class="oi oi-file mr-2" /> Nuevo</button>
    </div>
    <div class="form-group text-center" display: inline-block>
        @*Boton Guardar*@
        <button type="button" class="btn btn-lg btn-primary" @onclick="Guardar"> <i class="oi oi-account-login" style="transform:rotate(90deg)" /> Guardar</button>
    </div>
    <div class="form-group text-center" display: inline-block>
        @*Boton Eliminar*@
        <button type="button" class="btn btn-lg btn-primary" @onclick="Eliminar"> <i class="oi oi-trash mr-2"/> Eliminar</button>
    </div>
</div>
</EditForm>


@code{
    [Parameter]
    public int ProductoId { get; set; }

    private Productos productos = new Productos();

    protected override void OnInitialized()
    {
        Nuevo();
        Buscar();
    }

    private void CalcularValorInventario()
    {
        decimal Resultado = (productos.Existencia * productos.Costo);
        productos.ValorInventario = Resultado;
    }

    public void Nuevo()
    {
        productos = new Productos();
    }

    private void Buscar()
    {
        if(productos.ProductoId > 0)
        {
            var encontrado = ProductosBLL.Buscar(productos.ProductoId);
            if (encontrado != null)
                this.productos = encontrado;
            else
                toast.ShowWarning("No se ha encontrado");
        }
    }

    public void Guardar()
    {
        bool guarda;

        guarda = ProductosBLL.Guardar(productos);

        if (guarda)
        {
            Nuevo();
            toast.ShowSuccess("Guardado correctamente");
        }
        else
            toast.ShowError("No fue posible guardar");
    }

    public void Eliminar()
    {
        bool elimina;

        elimina = ProductosBLL.Eliminar(productos.ProductoId);

        if (elimina)
        {
            Nuevo();
            toast.ShowSuccess("Eliminado correctamente");
        }
        else
            toast.ShowError("No fue posible eliminar");
    }
}